//Geeksforgeeks
class Solution {
    // Function to return Breadth First Traversal of given graph.
    public ArrayList<Integer> bfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {

        //Steps
        //1.Add the source node in the queue and make it visitd. remove the vertex and store it in answer
        //2.Check if the adjacent vertex of the source node is visited or not 
        //3.If not visited then make as visite is true and add into the queue 
        
        ArrayList<Integer> res = new ArrayList<>();
        
        boolean visited [] = new boolean [V+1];
        
        Queue<Integer> q = new LinkedList<>();
        
        q.add(0);
        visited[0] = true;
        
        while(!q.isEmpty()){
            int u = q.poll();
            res.add(u);
            
            for (int v : adj.get(u)){
                if (visited[v] == false){
                    visited[v] = true;
                    q.add(v);
                }
            }
        }
        return res;
    }
}
