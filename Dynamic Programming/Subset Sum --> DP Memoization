//GEEKFORGEEKS

class Solution{
    
    /*----------------Memoization------------------*/
    
     static Boolean isSubsetSum(int n, int arr[], int sum){
         int [][] storage=new int[n+1][sum+1];
         for(int i=0;i<=n;i++){
             for(int j=0;j<=sum;j++){
                 storage[i][j]=-1;
             }
         }
        
         return helper(arr,sum,0,storage)==1;
     }
     static int helper(int [] arr,int sum,int ind,int [][] storage){
         if(sum==0){
             return storage[ind][sum]=1;
         }
         if(ind==arr.length){
             return storage[ind][sum]=0;
         }
        
         if(storage[ind][sum]!=-1){
             return storage[ind][sum];
         }
        
         if(arr[ind]>sum){
             return storage[ind][sum]=helper(arr,sum,ind+1,storage);
         }
         else{
             int op1=helper(arr,sum,ind+1,storage);
             int op2=helper(arr,sum-arr[ind],ind+1,storage);
             if(op1==1 || op2==1){
                return storage[ind][sum]=1;
             }
             else{
                 return storage[ind][sum]=0;
             }
         }
        
        
     } 

     
}
