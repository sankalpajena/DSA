class Solution 
{ 
    //Function to return max value that can be put in knapsack of capacity W.
    static int knapSack(int W, int wt[], int val[], int n) 
    { 
         // your code here 
         /* Base case 0 items left or knapsack is full */
    if(n == 0 || W == 0) 
        return 0;
    /* if weight of current element is less than or equal to capacity we can 
    either include or exclude the item. */
    if(wt[n] <= W){
         return Math.max(val[n]+knapSack(W-wt[n],n-1,val,wt),knapSack(W,n-1,val,wt));
    }
    /* if weight of current element is greater than the capacity we will
    not include it thus returning just the ignoring part. */
    return knapSack(W,n-1,val,wt);
    } 
}
